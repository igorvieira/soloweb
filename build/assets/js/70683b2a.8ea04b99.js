"use strict";(globalThis.webpackChunkdocusaurus_site=globalThis.webpackChunkdocusaurus_site||[]).push([[892],{5891:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"grpc","title":"gRPC","description":"Solo provides comprehensive support for testing and debugging gRPC services with schema introspection and request building.","source":"@site/docs/grpc.md","sourceDirName":".","slug":"/grpc","permalink":"/docs/grpc","draft":false,"unlisted":false,"editUrl":"https://github.com/igorvieira/Solo/tree/main/docs/grpc.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"GraphQL","permalink":"/docs/graphql"},"next":{"title":"cURL Integration","permalink":"/docs/curl"}}');var i=s(4848),l=s(8453);const t={sidebar_position:4},d="gRPC",a={},c=[{value:"What is gRPC?",id:"what-is-grpc",level:2},{value:"Creating a gRPC Request",id:"creating-a-grpc-request",level:2},{value:"Server Connection",id:"server-connection",level:2},{value:"Server Address Format",id:"server-address-format",level:3},{value:"TLS/SSL Connection",id:"tlsssl-connection",level:3},{value:"Loading Proto Files",id:"loading-proto-files",level:2},{value:"Method 1: Server Reflection",id:"method-1-server-reflection",level:3},{value:"Method 2: Upload Proto File",id:"method-2-upload-proto-file",level:3},{value:"Browsing Services",id:"browsing-services",level:2},{value:"Service List",id:"service-list",level:3},{value:"Method Details",id:"method-details",level:3},{value:"Building Requests",id:"building-requests",level:2},{value:"Request Editor",id:"request-editor",level:3},{value:"Field Types",id:"field-types",level:3},{value:"Method Types",id:"method-types",level:2},{value:"Unary RPC",id:"unary-rpc",level:3},{value:"Server Streaming RPC",id:"server-streaming-rpc",level:3},{value:"Client Streaming RPC",id:"client-streaming-rpc",level:3},{value:"Bidirectional Streaming RPC",id:"bidirectional-streaming-rpc",level:3},{value:"Metadata (Headers)",id:"metadata-headers",level:2},{value:"Response Viewer",id:"response-viewer",level:2},{value:"Successful Response",id:"successful-response",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Response Metadata",id:"response-metadata",level:3},{value:"Schema Viewer",id:"schema-viewer",level:2},{value:"View Services",id:"view-services",level:3},{value:"View Messages",id:"view-messages",level:3},{value:"View Enums",id:"view-enums",level:3},{value:"Using Variables",id:"using-variables",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Metadata-based Auth",id:"metadata-based-auth",level:3},{value:"TLS Client Certificates",id:"tls-client-certificates",level:3},{value:"Working with Timestamps",id:"working-with-timestamps",level:2},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Well-Known Types",id:"well-known-types",level:3},{value:"Request Templates",id:"request-templates",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Organize gRPC Services",id:"organize-grpc-services",level:3},{value:"Use Reflection When Possible",id:"use-reflection-when-possible",level:3},{value:"Test Error Cases",id:"test-error-cases",level:3},{value:"Document Your Requests",id:"document-your-requests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Cannot Connect to Server",id:"cannot-connect-to-server",level:3},{value:"Proto File Loading Errors",id:"proto-file-loading-errors",level:3},{value:"Schema Not Available",id:"schema-not-available",level:3},{value:"Authentication Errors",id:"authentication-errors",level:3},{value:"Example: Testing a User Service",id:"example-testing-a-user-service",level:2},{value:"Service Definition",id:"service-definition",level:3},{value:"GetUser Request",id:"getuser-request",level:3},{value:"CreateUser Request",id:"createuser-request",level:3},{value:"UpdateUser Request",id:"updateuser-request",level:3},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"grpc",children:"gRPC"})}),"\n",(0,i.jsx)(n.p,{children:"Solo provides comprehensive support for testing and debugging gRPC services with schema introspection and request building."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-grpc",children:"What is gRPC?"}),"\n",(0,i.jsx)(n.p,{children:"gRPC is a high-performance, open-source framework for remote procedure calls (RPC). It uses Protocol Buffers (protobuf) for serialization and HTTP/2 for transport. Solo makes it easy to work with gRPC services without writing code."}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-grpc-request",children:"Creating a gRPC Request"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:'"+"'})," button in the sidebar"]}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.strong,{children:"gRPC"})," as the request type"]}),"\n",(0,i.jsx)(n.li,{children:"Enter your gRPC server address"}),"\n",(0,i.jsxs)(n.li,{children:["Load your ",(0,i.jsx)(n.code,{children:".proto"})," file or let Solo discover services"]}),"\n",(0,i.jsx)(n.li,{children:"Select a method and build your request"}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Send"})," to invoke the RPC"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"server-connection",children:"Server Connection"}),"\n",(0,i.jsx)(n.h3,{id:"server-address-format",children:"Server Address Format"}),"\n",(0,i.jsx)(n.p,{children:"Enter your gRPC server address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"localhost:50051\ngrpc.example.com:443\n"})}),"\n",(0,i.jsx)(n.h3,{id:"tlsssl-connection",children:"TLS/SSL Connection"}),"\n",(0,i.jsx)(n.p,{children:"For secure connections:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use port ",(0,i.jsx)(n.code,{children:"443"})," or your custom TLS port"]}),"\n",(0,i.jsx)(n.li,{children:"Solo automatically handles TLS handshake"}),"\n",(0,i.jsx)(n.li,{children:"Provide certificates if required by your server"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"loading-proto-files",children:"Loading Proto Files"}),"\n",(0,i.jsxs)(n.p,{children:["gRPC services are defined using Protocol Buffer files (",(0,i.jsx)(n.code,{children:".proto"}),"). Solo needs these definitions to understand your service."]}),"\n",(0,i.jsx)(n.h3,{id:"method-1-server-reflection",children:"Method 1: Server Reflection"}),"\n",(0,i.jsx)(n.p,{children:"If your gRPC server has reflection enabled:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Enter the server address"}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Fetch Schema"})," or ",(0,i.jsx)(n.strong,{children:"Discover Services"})]}),"\n",(0,i.jsx)(n.li,{children:"Solo automatically retrieves service definitions"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"method-2-upload-proto-file",children:"Method 2: Upload Proto File"}),"\n",(0,i.jsx)(n.p,{children:"If reflection is not available:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Load Proto File"})]}),"\n",(0,i.jsxs)(n.li,{children:["Select your ",(0,i.jsx)(n.code,{children:".proto"})," file from your computer"]}),"\n",(0,i.jsx)(n.li,{children:"Solo parses the file and shows available services"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.code,{children:".proto"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage user;\n\nservice UserService {\n  rpc GetUser (GetUserRequest) returns (User) {}\n  rpc CreateUser (CreateUserRequest) returns (User) {}\n  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {}\n}\n\nmessage GetUserRequest {\n  string id = 1;\n}\n\nmessage User {\n  string id = 1;\n  string name = 2;\n  string email = 3;\n  int32 age = 4;\n}\n\nmessage CreateUserRequest {\n  string name = 1;\n  string email = 2;\n  int32 age = 3;\n}\n\nmessage ListUsersRequest {\n  int32 page = 1;\n  int32 limit = 2;\n}\n\nmessage ListUsersResponse {\n  repeated User users = 1;\n  int32 total = 2;\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"browsing-services",children:"Browsing Services"}),"\n",(0,i.jsx)(n.p,{children:"Once the schema is loaded, browse available services:"}),"\n",(0,i.jsx)(n.h3,{id:"service-list",children:"Service List"}),"\n",(0,i.jsx)(n.p,{children:"View all services and their methods:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"UserService\n\u251c\u2500\u2500 GetUser\n\u251c\u2500\u2500 CreateUser\n\u2514\u2500\u2500 ListUsers\n\nProductService\n\u251c\u2500\u2500 GetProduct\n\u251c\u2500\u2500 CreateProduct\n\u2514\u2500\u2500 DeleteProduct\n"})}),"\n",(0,i.jsx)(n.h3,{id:"method-details",children:"Method Details"}),"\n",(0,i.jsx)(n.p,{children:"Click on a method to see:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request message"})," structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response message"})," structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Field types"})," and requirements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method type"})," (unary, streaming, etc.)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"building-requests",children:"Building Requests"}),"\n",(0,i.jsx)(n.h3,{id:"request-editor",children:"Request Editor"}),"\n",(0,i.jsx)(n.p,{children:"Solo provides a JSON-based editor for building gRPC requests:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "user_123"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"field-types",children:"Field Types"}),"\n",(0,i.jsx)(n.p,{children:"Solo supports all Protocol Buffer types:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Scalar Types:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "string_field": "text",\n  "int32_field": 42,\n  "int64_field": "9007199254740991",\n  "float_field": 3.14,\n  "double_field": 3.141592653589793,\n  "bool_field": true\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Repeated Fields (Arrays):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "tags": ["tag1", "tag2", "tag3"],\n  "numbers": [1, 2, 3, 4, 5]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Nested Messages:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "user": {\n    "name": "John Doe",\n    "email": "john@example.com",\n    "address": {\n      "street": "123 Main St",\n      "city": "San Francisco",\n      "country": "USA"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Maps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metadata": {\n    "key1": "value1",\n    "key2": "value2"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Enums:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": "ACTIVE",\n  "role": "ADMIN"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"method-types",children:"Method Types"}),"\n",(0,i.jsx)(n.p,{children:"gRPC supports different method types:"}),"\n",(0,i.jsx)(n.h3,{id:"unary-rpc",children:"Unary RPC"}),"\n",(0,i.jsx)(n.p,{children:"Simple request-response (most common):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:"rpc GetUser (GetUserRequest) returns (User) {}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Request:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "123"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "123",\n  "name": "John Doe",\n  "email": "john@example.com"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"server-streaming-rpc",children:"Server Streaming RPC"}),"\n",(0,i.jsx)(n.p,{children:"Server sends multiple responses:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:"rpc ListUsers (ListUsersRequest) returns (stream User) {}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Solo displays each response as it arrives in real-time."}),"\n",(0,i.jsx)(n.h3,{id:"client-streaming-rpc",children:"Client Streaming RPC"}),"\n",(0,i.jsx)(n.p,{children:"Client sends multiple requests:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:"rpc UploadUsers (stream User) returns (UploadSummary) {}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add multiple messages in Solo's request builder."}),"\n",(0,i.jsx)(n.h3,{id:"bidirectional-streaming-rpc",children:"Bidirectional Streaming RPC"}),"\n",(0,i.jsx)(n.p,{children:"Both client and server stream:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:"rpc Chat (stream ChatMessage) returns (stream ChatMessage) {}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Send and receive messages in real-time."}),"\n",(0,i.jsx)(n.h2,{id:"metadata-headers",children:"Metadata (Headers)"}),"\n",(0,i.jsx)(n.p,{children:"Add gRPC metadata (similar to HTTP headers):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click on the ",(0,i.jsx)(n.strong,{children:"Metadata"})," tab"]}),"\n",(0,i.jsx)(n.li,{children:"Add key-value pairs"}),"\n",(0,i.jsxs)(n.li,{children:["Common metadata:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"authorization: Bearer <token>"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"api-key: <your_key>"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"user-agent: Solo gRPC Client"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "authorization": "Bearer eyJhbGciOiJIUzI1NiIs...",\n  "trace-id": "abc-123-xyz"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"response-viewer",children:"Response Viewer"}),"\n",(0,i.jsx)(n.h3,{id:"successful-response",children:"Successful Response"}),"\n",(0,i.jsx)(n.p,{children:"Responses are displayed with JSON formatting:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "123",\n  "name": "John Doe",\n  "email": "john@example.com",\n  "age": 30,\n  "created_at": "2024-01-01T00:00:00Z"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,i.jsx)(n.p,{children:"gRPC errors include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status code"})," (OK, NOT_FOUND, PERMISSION_DENIED, etc.)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Error message"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error details"})," (if provided)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example error:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Status: NOT_FOUND\nMessage: User with id '999' not found\n"})}),"\n",(0,i.jsx)(n.h3,{id:"response-metadata",children:"Response Metadata"}),"\n",(0,i.jsx)(n.p,{children:"View response metadata (trailers):"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Timing information"}),"\n",(0,i.jsx)(n.li,{children:"Server-sent headers"}),"\n",(0,i.jsx)(n.li,{children:"Custom metadata"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"schema-viewer",children:"Schema Viewer"}),"\n",(0,i.jsx)(n.p,{children:"Browse the complete gRPC schema:"}),"\n",(0,i.jsx)(n.h3,{id:"view-services",children:"View Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Services\n\u251c\u2500\u2500 UserService\n\u2502   \u251c\u2500\u2500 GetUser (GetUserRequest) \u2192 User\n\u2502   \u251c\u2500\u2500 CreateUser (CreateUserRequest) \u2192 User\n\u2502   \u2514\u2500\u2500 ListUsers (ListUsersRequest) \u2192 ListUsersResponse\n\u2514\u2500\u2500 AuthService\n    \u251c\u2500\u2500 Login (LoginRequest) \u2192 LoginResponse\n    \u2514\u2500\u2500 Logout (LogoutRequest) \u2192 Empty\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-messages",children:"View Messages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Messages\n\u251c\u2500\u2500 User\n\u2502   \u251c\u2500\u2500 id: string\n\u2502   \u251c\u2500\u2500 name: string\n\u2502   \u251c\u2500\u2500 email: string\n\u2502   \u2514\u2500\u2500 age: int32\n\u2514\u2500\u2500 GetUserRequest\n    \u2514\u2500\u2500 id: string\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-enums",children:"View Enums"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Enums\n\u2514\u2500\u2500 UserStatus\n    \u251c\u2500\u2500 ACTIVE = 0\n    \u251c\u2500\u2500 INACTIVE = 1\n    \u2514\u2500\u2500 SUSPENDED = 2\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-variables",children:"Using Variables"}),"\n",(0,i.jsx)(n.p,{children:"Use Solo variables in your gRPC requests:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "{{user_id}}",\n  "api_key": "{{api_key}}"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Solo substitutes variables before sending the request."}),"\n",(0,i.jsxs)(n.p,{children:["Learn more in the ",(0,i.jsx)(n.a,{href:"/docs/variables",children:"Variables documentation"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.h3,{id:"metadata-based-auth",children:"Metadata-based Auth"}),"\n",(0,i.jsx)(n.p,{children:"Add authentication via metadata:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "authorization": "Bearer {{auth_token}}"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"tls-client-certificates",children:"TLS Client Certificates"}),"\n",(0,i.jsx)(n.p,{children:"For mutual TLS (mTLS):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Configure client certificates in settings"}),"\n",(0,i.jsx)(n.li,{children:"Solo presents certificates during TLS handshake"}),"\n",(0,i.jsx)(n.li,{children:"Server validates client identity"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"working-with-timestamps",children:"Working with Timestamps"}),"\n",(0,i.jsx)(n.p,{children:"Protocol Buffers have special types for timestamps:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "created_at": "2024-01-01T12:00:00Z",\n  "updated_at": "2024-01-15T15:30:00.500Z"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Solo automatically formats timestamps correctly."}),"\n",(0,i.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,i.jsx)(n.h3,{id:"well-known-types",children:"Well-Known Types"}),"\n",(0,i.jsx)(n.p,{children:"Solo supports Protocol Buffer well-known types:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Timestamp:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "created_at": "2024-01-01T00:00:00Z"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Duration:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timeout": "30s"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Empty:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Any:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "type.googleapis.com/user.User",\n  "id": "123",\n  "name": "John"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"request-templates",children:"Request Templates"}),"\n",(0,i.jsx)(n.p,{children:"Save common requests as templates:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Configure your request"}),"\n",(0,i.jsx)(n.li,{children:"Save it with a descriptive name"}),"\n",(0,i.jsx)(n.li,{children:"Reuse for similar API calls"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"organize-grpc-services",children:"Organize gRPC Services"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Group related services into folders"}),"\n",(0,i.jsx)(n.li,{children:"Use descriptive names for saved requests"}),"\n",(0,i.jsx)(n.li,{children:"Document expected responses"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"use-reflection-when-possible",children:"Use Reflection When Possible"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enable server reflection in development"}),"\n",(0,i.jsx)(n.li,{children:"Makes testing easier without proto files"}),"\n",(0,i.jsx)(n.li,{children:"Automatically stays up-to-date with changes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"test-error-cases",children:"Test Error Cases"}),"\n",(0,i.jsx)(n.p,{children:"Test various scenarios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Invalid input data"}),"\n",(0,i.jsx)(n.li,{children:"Missing required fields"}),"\n",(0,i.jsx)(n.li,{children:"Authentication failures"}),"\n",(0,i.jsx)(n.li,{children:"Server errors"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"document-your-requests",children:"Document Your Requests"}),"\n",(0,i.jsx)(n.p,{children:"Use the Description tab to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Explain what the RPC does"}),"\n",(0,i.jsx)(n.li,{children:"Document expected inputs"}),"\n",(0,i.jsx)(n.li,{children:"Note any side effects"}),"\n",(0,i.jsx)(n.li,{children:"Add example responses"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"cannot-connect-to-server",children:"Cannot Connect to Server"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify server address and port"}),"\n",(0,i.jsx)(n.li,{children:"Check if server is running"}),"\n",(0,i.jsx)(n.li,{children:"Ensure firewall allows connections"}),"\n",(0,i.jsxs)(n.li,{children:["Try ",(0,i.jsx)(n.code,{children:"localhost"})," vs ",(0,i.jsx)(n.code,{children:"127.0.0.1"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"proto-file-loading-errors",children:"Proto File Loading Errors"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify proto file syntax"}),"\n",(0,i.jsx)(n.li,{children:"Check for import statements"}),"\n",(0,i.jsx)(n.li,{children:"Ensure all dependencies are included"}),"\n",(0,i.jsx)(n.li,{children:"Validate field numbers are unique"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"schema-not-available",children:"Schema Not Available"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enable server reflection if possible"}),"\n",(0,i.jsx)(n.li,{children:"Load proto file manually"}),"\n",(0,i.jsx)(n.li,{children:"Check server documentation"}),"\n",(0,i.jsx)(n.li,{children:"Verify gRPC server is configured correctly"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"authentication-errors",children:"Authentication Errors"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify metadata keys match server expectations"}),"\n",(0,i.jsx)(n.li,{children:"Check token format and validity"}),"\n",(0,i.jsx)(n.li,{children:"Ensure TLS certificates are valid"}),"\n",(0,i.jsx)(n.li,{children:"Confirm authentication method"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-testing-a-user-service",children:"Example: Testing a User Service"}),"\n",(0,i.jsx)(n.h3,{id:"service-definition",children:"Service Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-protobuf",children:"service UserService {\n  rpc GetUser (GetUserRequest) returns (User) {}\n  rpc CreateUser (CreateUserRequest) returns (User) {}\n  rpc UpdateUser (UpdateUserRequest) returns (User) {}\n  rpc DeleteUser (DeleteUserRequest) returns (Empty) {}\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getuser-request",children:"GetUser Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "user_123"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"createuser-request",children:"CreateUser Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "John Doe",\n  "email": "john@example.com",\n  "age": 30,\n  "role": "ADMIN"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"updateuser-request",children:"UpdateUser Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "user_123",\n  "name": "John Updated",\n  "email": "john.new@example.com"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/variables",children:"Variables"})," \u2013 Use dynamic values in gRPC requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/collections",children:"Collections"})," \u2013 Organize gRPC services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/http-requests",children:"HTTP Requests"})," \u2013 Test REST APIs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/graphql",children:"GraphQL"})," \u2013 Test GraphQL APIs"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);