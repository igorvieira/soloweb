"use strict";(globalThis.webpackChunkdocusaurus_site=globalThis.webpackChunkdocusaurus_site||[]).push([[899],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}},9603:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"graphql","title":"GraphQL","description":"Solo provides full support for GraphQL APIs with schema introspection, query validation, and an intuitive editor.","source":"@site/docs/graphql.md","sourceDirName":".","slug":"/graphql","permalink":"/docs/graphql","draft":false,"unlisted":false,"editUrl":"https://github.com/igorvieira/Solo/tree/main/docs/graphql.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"HTTP Requests","permalink":"/docs/http-requests"},"next":{"title":"gRPC","permalink":"/docs/grpc"}}');var r=i(4848),l=i(8453);const a={sidebar_position:3},t="GraphQL",d={},o=[{value:"Creating a GraphQL Request",id:"creating-a-graphql-request",level:2},{value:"GraphQL Query Editor",id:"graphql-query-editor",level:2},{value:"Writing Queries",id:"writing-queries",level:3},{value:"Writing Mutations",id:"writing-mutations",level:3},{value:"Using Fragments",id:"using-fragments",level:3},{value:"Query Variables",id:"query-variables",level:2},{value:"In the Query",id:"in-the-query",level:3},{value:"In the Variables Tab",id:"in-the-variables-tab",level:3},{value:"Schema Introspection",id:"schema-introspection",level:2},{value:"Fetching the Schema",id:"fetching-the-schema",level:3},{value:"Viewing the Schema",id:"viewing-the-schema",level:3},{value:"Schema Documentation",id:"schema-documentation",level:3},{value:"Authentication",id:"authentication",level:2},{value:"Bearer Token",id:"bearer-token",level:3},{value:"Custom Headers",id:"custom-headers",level:3},{value:"Response Viewer",id:"response-viewer",level:2},{value:"Successful Response",id:"successful-response",level:3},{value:"Error Response",id:"error-response",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Query Autocomplete",id:"query-autocomplete",level:3},{value:"Query Validation",id:"query-validation",level:3},{value:"Operation Selection",id:"operation-selection",level:3},{value:"Working with Variables",id:"working-with-variables",level:2},{value:"Solo Variables in GraphQL",id:"solo-variables-in-graphql",level:3},{value:"Common GraphQL Patterns",id:"common-graphql-patterns",level:2},{value:"Pagination",id:"pagination",level:3},{value:"Nested Queries",id:"nested-queries",level:3},{value:"Aliases",id:"aliases",level:3},{value:"Directives",id:"directives",level:3},{value:"Documenting GraphQL APIs",id:"documenting-graphql-apis",level:2},{value:"Tips &amp; Best Practices",id:"tips--best-practices",level:2},{value:"Use Descriptive Operation Names",id:"use-descriptive-operation-names",level:3},{value:"Request Only What You Need",id:"request-only-what-you-need",level:3},{value:"Use Fragments for Reusability",id:"use-fragments-for-reusability",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Schema Not Loading",id:"schema-not-loading",level:3},{value:"Query Validation Errors",id:"query-validation-errors",level:3},{value:"Authentication Issues",id:"authentication-issues",level:3},{value:"Testing Popular GraphQL APIs",id:"testing-popular-graphql-apis",level:2},{value:"GitHub GraphQL API",id:"github-graphql-api",level:3},{value:"Shopify Admin API",id:"shopify-admin-api",level:3},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"graphql",children:"GraphQL"})}),"\n",(0,r.jsx)(n.p,{children:"Solo provides full support for GraphQL APIs with schema introspection, query validation, and an intuitive editor."}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-graphql-request",children:"Creating a GraphQL Request"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:'"+"'})," button in the sidebar"]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"GraphQL"})," as the request type"]}),"\n",(0,r.jsx)(n.li,{children:"Enter your GraphQL endpoint URL"}),"\n",(0,r.jsx)(n.li,{children:"Write your query or mutation"}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Send"})," to execute"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"graphql-query-editor",children:"GraphQL Query Editor"}),"\n",(0,r.jsx)(n.p,{children:"The GraphQL editor provides syntax highlighting and intelligent features:"}),"\n",(0,r.jsx)(n.h3,{id:"writing-queries",children:"Writing Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetUser {\n  user(id: "123") {\n    id\n    name\n    email\n    posts {\n      title\n      createdAt\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"writing-mutations",children:"Writing Mutations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'mutation CreatePost {\n  createPost(input: {\n    title: "New Post"\n    body: "Post content"\n    userId: "123"\n  }) {\n    id\n    title\n    createdAt\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"using-fragments",children:"Using Fragments"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"fragment UserFields on User {\n  id\n  name\n  email\n}\n\nquery GetUsers {\n  users {\n    ...UserFields\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"query-variables",children:"Query Variables"}),"\n",(0,r.jsx)(n.p,{children:"Define variables for dynamic values in your queries:"}),"\n",(0,r.jsx)(n.h3,{id:"in-the-query",children:"In the Query"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query GetUser($userId: ID!) {\n  user(id: $userId) {\n    id\n    name\n    email\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"in-the-variables-tab",children:"In the Variables Tab"}),"\n",(0,r.jsxs)(n.p,{children:["Click on the ",(0,r.jsx)(n.strong,{children:"Variables"})," tab and add your variables as JSON:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "userId": "123"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"schema-introspection",children:"Schema Introspection"}),"\n",(0,r.jsx)(n.p,{children:"Solo can automatically fetch and display your GraphQL schema:"}),"\n",(0,r.jsx)(n.h3,{id:"fetching-the-schema",children:"Fetching the Schema"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Enter your GraphQL endpoint URL"}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Fetch Schema"})," button (or it happens automatically)"]}),"\n",(0,r.jsx)(n.li,{children:"The schema is downloaded and cached locally"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"viewing-the-schema",children:"Viewing the Schema"}),"\n",(0,r.jsxs)(n.p,{children:["Click on the ",(0,r.jsx)(n.strong,{children:"Schema"})," tab to browse:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Types"})," \u2013 View all GraphQL types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Queries"})," \u2013 Available query operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mutations"})," \u2013 Available mutation operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Subscriptions"})," \u2013 Available subscription operations (if supported)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"schema-documentation",children:"Schema Documentation"}),"\n",(0,r.jsx)(n.p,{children:"Each type, field, and argument includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Type information"}),"\n",(0,r.jsx)(n.li,{children:"Description (if provided by the API)"}),"\n",(0,r.jsx)(n.li,{children:"Required vs optional fields"}),"\n",(0,r.jsx)(n.li,{children:"Default values"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example schema view:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Query\n\u251c\u2500\u2500 user(id: ID!): User\n\u251c\u2500\u2500 users(limit: Int, offset: Int): [User!]!\n\u2514\u2500\u2500 posts(userId: ID): [Post!]!\n\nUser\n\u251c\u2500\u2500 id: ID!\n\u251c\u2500\u2500 name: String!\n\u251c\u2500\u2500 email: String!\n\u2514\u2500\u2500 posts: [Post!]!\n"})}),"\n",(0,r.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"GraphQL endpoints often require authentication:"}),"\n",(0,r.jsx)(n.h3,{id:"bearer-token",children:"Bearer Token"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Click on the ",(0,r.jsx)(n.strong,{children:"Auth"})," tab"]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"Bearer Token"})]}),"\n",(0,r.jsx)(n.li,{children:"Enter your API token"}),"\n",(0,r.jsx)(n.li,{children:"Solo adds the header automatically"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Authorization: Bearer your_token_here\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-headers",children:"Custom Headers"}),"\n",(0,r.jsx)(n.p,{children:"Add custom authentication headers:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Click on the ",(0,r.jsx)(n.strong,{children:"Headers"})," tab"]}),"\n",(0,r.jsx)(n.li,{children:"Add your authentication header"}),"\n",(0,r.jsxs)(n.li,{children:["Common examples:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Authorization: Bearer <token>"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"X-API-Key: <key>"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Cookie: session=<value>"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"response-viewer",children:"Response Viewer"}),"\n",(0,r.jsx)(n.p,{children:"GraphQL responses are displayed with formatting:"}),"\n",(0,r.jsx)(n.h3,{id:"successful-response",children:"Successful Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "user": {\n      "id": "123",\n      "name": "John Doe",\n      "email": "john@example.com",\n      "posts": [\n        {\n          "title": "First Post",\n          "createdAt": "2024-01-01"\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response",children:"Error Response"}),"\n",(0,r.jsx)(n.p,{children:"GraphQL errors are clearly displayed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "User not found",\n      "locations": [{ "line": 2, "column": 3 }],\n      "path": ["user"]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsx)(n.h3,{id:"query-autocomplete",children:"Query Autocomplete"}),"\n",(0,r.jsx)(n.p,{children:"The GraphQL editor provides autocomplete based on the schema:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Type field names and press ",(0,r.jsx)(n.code,{children:"Ctrl+Space"})," for suggestions"]}),"\n",(0,r.jsx)(n.li,{children:"See available fields for each type"}),"\n",(0,r.jsx)(n.li,{children:"View field descriptions inline"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"query-validation",children:"Query Validation"}),"\n",(0,r.jsx)(n.p,{children:"Solo validates your query against the schema:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u274c Invalid field names are highlighted"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Type mismatches are caught before sending"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Valid queries are marked clearly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"operation-selection",children:"Operation Selection"}),"\n",(0,r.jsx)(n.p,{children:"If you have multiple operations in one query:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetUser {\n  user(id: "123") { name }\n}\n\nquery GetPosts {\n  posts { title }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Select which operation to execute from the dropdown."}),"\n",(0,r.jsx)(n.h2,{id:"working-with-variables",children:"Working with Variables"}),"\n",(0,r.jsx)(n.h3,{id:"solo-variables-in-graphql",children:"Solo Variables in GraphQL"}),"\n",(0,r.jsx)(n.p,{children:"Use Solo's variable system with GraphQL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query GetUser($userId: ID!) {\n  user(id: $userId) {\n    id\n    name\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Variables tab:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "userId": "{{current_user_id}}"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Solo will substitute ",(0,r.jsx)(n.code,{children:"{{current_user_id}}"})," with your defined variable value."]}),"\n",(0,r.jsxs)(n.p,{children:["Learn more in the ",(0,r.jsx)(n.a,{href:"/docs/variables",children:"Variables documentation"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"common-graphql-patterns",children:"Common GraphQL Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query GetUsers($limit: Int!, $offset: Int!) {\n  users(limit: $limit, offset: $offset) {\n    id\n    name\n    email\n  }\n  usersCount\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "limit": 10,\n  "offset": 0\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nested-queries",children:"Nested Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetUserWithPosts {\n  user(id: "123") {\n    id\n    name\n    posts {\n      id\n      title\n      comments {\n        id\n        text\n        author {\n          name\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"aliases",children:"Aliases"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetMultipleUsers {\n  user1: user(id: "123") {\n    name\n  }\n  user2: user(id: "456") {\n    name\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"directives",children:"Directives"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetUser($includeEmail: Boolean!) {\n  user(id: "123") {\n    id\n    name\n    email @include(if: $includeEmail)\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"documenting-graphql-apis",children:"Documenting GraphQL APIs"}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"Description"})," tab to document your queries:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Explain what the query does"}),"\n",(0,r.jsx)(n.li,{children:"Document expected variables"}),"\n",(0,r.jsx)(n.li,{children:"Note any special requirements"}),"\n",(0,r.jsx)(n.li,{children:"Add example responses"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All documentation is stored locally with your request."}),"\n",(0,r.jsx)(n.h2,{id:"tips--best-practices",children:"Tips & Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"use-descriptive-operation-names",children:"Use Descriptive Operation Names"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"# Good\nquery GetUserDashboardData {\n  user { ... }\n}\n\n# Less clear\nquery {\n  user { ... }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"request-only-what-you-need",children:"Request Only What You Need"}),"\n",(0,r.jsx)(n.p,{children:"GraphQL lets you specify exactly which fields to return:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'# Efficient\nquery GetUserName {\n  user(id: "123") {\n    name\n  }\n}\n\n# Less efficient\nquery GetUser {\n  user(id: "123") {\n    id\n    name\n    email\n    address\n    phone\n    # ... many fields you don\'t need\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"use-fragments-for-reusability",children:"Use Fragments for Reusability"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'fragment PostPreview on Post {\n  id\n  title\n  excerpt\n  createdAt\n}\n\nquery GetRecentPosts {\n  recentPosts {\n    ...PostPreview\n  }\n}\n\nquery GetUserPosts {\n  user(id: "123") {\n    posts {\n      ...PostPreview\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"schema-not-loading",children:"Schema Not Loading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify the GraphQL endpoint URL is correct"}),"\n",(0,r.jsx)(n.li,{children:"Check if the endpoint supports introspection"}),"\n",(0,r.jsx)(n.li,{children:"Some APIs disable introspection in production"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"query-validation-errors",children:"Query Validation Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure all required fields are included"}),"\n",(0,r.jsx)(n.li,{children:"Check variable types match the schema"}),"\n",(0,r.jsx)(n.li,{children:"Verify field names are spelled correctly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-issues",children:"Authentication Issues"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Confirm the auth token is valid"}),"\n",(0,r.jsx)(n.li,{children:"Check if the token needs to be refreshed"}),"\n",(0,r.jsx)(n.li,{children:"Verify the correct authentication method is used"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing-popular-graphql-apis",children:"Testing Popular GraphQL APIs"}),"\n",(0,r.jsx)(n.h3,{id:"github-graphql-api",children:"GitHub GraphQL API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query GetRepository {\n  repository(owner: "igorvieira", name: "Solo") {\n    name\n    description\n    stargazerCount\n    forkCount\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Endpoint: ",(0,r.jsx)(n.code,{children:"https://api.github.com/graphql"}),"\nAuth: Bearer Token (Personal Access Token)"]}),"\n",(0,r.jsx)(n.h3,{id:"shopify-admin-api",children:"Shopify Admin API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query GetProducts {\n  products(first: 10) {\n    edges {\n      node {\n        id\n        title\n        description\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Endpoint: ",(0,r.jsx)(n.code,{children:"https://{shop}.myshopify.com/admin/api/2024-01/graphql.json"}),"\nAuth: Custom header ",(0,r.jsx)(n.code,{children:"X-Shopify-Access-Token"})]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/grpc",children:"gRPC"})," \u2013 Test gRPC services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/variables",children:"Variables"})," \u2013 Use dynamic variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/collections",children:"Collections"})," \u2013 Organize GraphQL queries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/http-requests",children:"HTTP Requests"})," \u2013 Test REST APIs"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);